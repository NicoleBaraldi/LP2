<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>